@model SymViewModel.Tax.TaxSetupVM
@using UIHelper.MVC
@{
    ViewBag.Title = "Edit";
    ViewBag.Location = "Edit"; 
}
@using (Html.BeginForm("Create", "TaxSetup", FormMethod.Post, new { @Id = "frmtxts" }))
{
    @Html.ValidationSummary(true)
    <div class="thinbox">
         @Html.HiddenFor(model => model.Id)
        <div class="row">
            <label class="col-sm-5">
                @Html.LabelFor(model => model.Code)
            </label>
            <div class="col-sm-7">
                 @Html.TextBoxFor(model => model.Code, new { @placeholder = "Code", @class ="ac required form-control" })
                 @*@Html.SimpleDropDownFor(model => model.SalaryTypeId, "/Config/DropDown/SalaryType", new { @class = " form-control" })*@
            </div>
        </div>
         <div class="row">
            <label class="col-sm-5">
                @Html.LabelFor(model => model.Name)
            </label>
            <div class="col-sm-7">
                @Html.TextBoxFor(model => model.Name, new { @placeholder = "Name", @class ="ac required form-control" })
            </div>
        </div>
        <div class="row">
            <label class="col-sm-5">
                @Html.LabelFor(model => model.Remarks)
            </label>
            <div class="col-sm-7">
                @Html.TextAreaFor(model => model.Remarks, new { @placeholder = "Remarks", @class ="form-control" })
                @Html.ValidationMessageFor(model => model.Remarks)
            </div>
        </div>
        <div class="row">
            <label class="col-sm-5">
				  <button type="button" title="Save Data" onclick="pageSubmit('frmtxts');" class="sym-btn-save">&nbsp;Save</button>
            </label>
            <label class="col-sm-7">
			 <button type="button" title="Cancel Data" class=" btncancel sym-btn-cancel">&nbsp;Cancel</button>
            </label>
        </div>
        </div>
}
  <script>
      $(function () {
          InitDropDowns();
          valiDation("frmtxts");
      });
  </script>