@model SymViewModel.HRM.EmployeeInfoVM
@using UIHelper.MVC
<style>
    input[type='text'], input[type='password'], textarea {
        margin: 0px!important;
    }
</style>
@using (Html.BeginForm("Create", "TAX108A", FormMethod.Post, new { @Id = "afrmEmployeeEdit" }))
{   
    <div class="row">
        <div class="col-md-4">
            <div class="thinbox">
                <div class="th_thinbox">
                    <p>@Model.EmpName</p>
                </div>
                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.empTAX108AVM.Id, new { @class = "cTAX108Id" })
                    @Html.HiddenFor(model => model.empTAX108AVM.EmployeeId)
                    @Html.HiddenFor(model => model.empTAX108AVM.Post, new { @class = "cPost" })
                    @Html.HiddenFor(model => model.empTAX108AVM.SubmitYear, new { @class = "cSubmitYear" })
                    @*@Html.HiddenFor(model => model.FiscalYearDetailId)*@
                    @*@Html.HiddenFor(model => model.EmployeeOtherEarningVM.EarningTypeId, new { @class = " form-control " })*@
                    <div class="editor-label col-md-4 ">
                        <label><b>Code</b> </label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Code, new { @placeholder = "Employee Code", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                    <div class="editor-label col-md-4">
                        @Html.LabelFor(model => model.JoinDate)
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.JoinDate, new { @placeholder = "Employee Join Date", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.JoinDate)
                    </div>
                    <div class="editor-label col-md-4">
                        @Html.LabelFor(model => model.Designation)
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Designation, new { @placeholder = "Employee Designation", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Designation)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["DepartmentLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Department, new { @placeholder = "Employee Department", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Department)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["SectionLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Section, new { @placeholder = "Employee Section", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Section)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["ProjectLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Project, new { @placeholder = "Employee Project", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Project)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="thinbox">

                <div class="row" id="ot">
                    @*<div class="col-md-3">
                        <div class="editor-label">
                              @Html.LabelFor(model => model.empGFOpeinigVM.EmployerContribution)                        </div>
 <div class="editor-field"> @Html.TextBoxFor(model => model.empGFOpeinigVM.EmployerContribution, new { @class = "cEmployeeContribution  form-control" })
                  @Html.ValidationMessageFor(model => model.empGFOpeinigVM.EmployerContribution)
                        </div>
                    </div>*@

                    <div class="col-md-3">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.empTAX108AVM.SubmitSerialNo)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.empTAX108AVM.SubmitSerialNo, new { @class = "cEmployerContribution  form-control" })
                            @Html.ValidationMessageFor(model => model.empTAX108AVM.SubmitSerialNo)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.empTAX108AVM.SubmitYear)
                        </div>
                        <div class="editor-field">
                            <div>@*@Html.TextBoxFor(model => model.empTAX108AVM.SubmitYear, @Session["SessionYear"] as string, new { @class = "fiscalyearCom form-control cEmployerProfit" })*@ </div>
                            <div>@Html.TextBox("FiscalYear", @Session["SessionYear"] as string, new { @class = "fiscalyearCom form-control cSessionYear" }) </div>

                            @*@Html.TextBoxFor(model => model.empTAX108AVM.SubmitYear, new { @class = "cEmployerProfit  form-control" })*@
                            @Html.ValidationMessageFor(model => model.empTAX108AVM.SubmitYear)
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.empTAX108AVM.SubmitDate)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.empTAX108AVM.SubmitDate, new { @placeholder = "Opening Date", @class = "dpDate cOpeningDate customDatePicker required form-control" })
                            @Html.ValidationMessageFor(model => model.empTAX108AVM.SubmitDate)
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.empTAX108AVM.Remarks)
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.empTAX108AVM.Remarks, new { @class = "  form-control" })
                            @Html.ValidationMessageFor(model => model.empTAX108AVM.Remarks)
                        </div>
                    </div>

                </div>

                <div class="row">
                 
                    
                </div>
                <br />
                <div class="headrow">
                    <button type="button" title="Save Data" id="SaveJSON" class=" Save sym-btn-save">&nbsp;Save</button>
                    <button type="button" title="Save Data" id="UpdateJSON" class=" Save sym-btn-update">Update</button>
                    @*<button type="button" title="Delete Data" id="DeleteJSON" class=" Save sym-btn-remove">&nbsp;Delete</button>*@
                    <button type="button" title="Post Data" id="PostJSON" class=" Save sym-btn-post">&nbsp;Post</button>
                </div>
            </div>
        </div>
    </div>
}
<script>

    $(function () {
        InitDateTimePickers();
    });
    $(function () {

        InitDropDowns();
        checkvalue();
        if ('@Model.Code' == null || '@Model.Code' == "") {
            $('#empId').val("");
        }
        else {
            $('#empId').val('@Model.Code~@Model.EmpName');
        }
        $('.selectDropdown').val('@Model.Code').change();
    });
    $('#DeleteJSON').click(function () {
        var myData = $('#afrmEmployeeEdit').serialize();
        var url = "/Payroll/TAX108A/Create?btn=delete";
        submit(url, myData);
        $('.EarningAmount').val('0');
    });
    $(function () {
        valiDation("afrmEmployeeEdit");
    });
    function checkvalue() {
        var empPFOpeinigId = '@Model.empTAX108AVM.Id';
        if (empPFOpeinigId == 0 || empPFOpeinigId == "") {
            $("#SaveJSON").show();
            $("#UpdateJSON").hide();
            $("#PostJSON").hide();
        }
        else {

            var SubmitYear = $('.cSubmitYear').val();
            $('#FiscalYear').val(SubmitYear);

            $("#SaveJSON").hide();
            $("#UpdateJSON").show();
            $("#PostJSON").show();
        }
    }

    function checkbtn() {
        $("#SaveJSON").hide();
        $("#UpdateJSON").show();
        $("#PostJSON").show();
    }

    $('#SaveJSON').click(function () {

        var PFOpeningValue = $('.cPFOpeningValue').val();
        var OpeningDate = $('.cOpeningDate').val();

        

        var Code = $('#Code').val();
        if (Code == "") {
            ShowResult("Fail", "Please Select Code!");
            return;
        }
        //////if (PFOpeningValue == "" || PFOpeningValue == "0" || PFOpeningValue == "0.0" || PFOpeningValue == "0.00") {
        //////    ShowResult("Fail", "Please Enter GF Opening Value!");
        //////    return;
        //////}
        if (OpeningDate == "") {
            ShowResult("Fail", "Please Select Date!");
            return;
        }
        var SessionYear = $('#FiscalYear').val();
        $('.cSubmitYear').val(SessionYear);

        var myData = $('#afrmEmployeeEdit').serialize();
        var url = "/Payroll/TAX108A/Create";
        //submit(url, myData);
        //location.reload();

        ////url = "/Payroll/TAX108A/Create";
        $.ajax({
            url: url,
            data: myData,
            type: 'POST',
            beforeSend: function () { $(".loading").show(); },
            complete: function () { $(".loading").fadeOut(200).hide("slow") },
            success: function (data) {

                var msg1 = data.split('~')[0];
                var msg2 = data.split('~')[1];
                var id = data.split('~')[2];

                if (msg1.toLowerCase() == "success") {
                    $('.cTAX108Id').val(id);

                    checkbtn();
                }

                ShowResult(msg1, msg2);
            },

        });

    });

    $('#UpdateJSON').click(function () {

        var PFOpeningValue = $('.cPFOpeningValue').val();
        var OpeningDate = $('.cOpeningDate').val();
        var Post = $('.cPost').val();

        var Code = $('#Code').val();
        if (Code == "") {
            ShowResult("Fail", "Please Select Code!");
            return;
        }
        //////if (PFOpeningValue == "" || PFOpeningValue == "0" || PFOpeningValue == "0.0" || PFOpeningValue == "0.00") {
        //////    ShowResult("Fail", "Please Enter GF Opening Value!");
        //////    return;
        //////}
        if (OpeningDate == "") {
            ShowResult("Fail", "Please Select Opening Date!");
            return;
        }

        if (Post.toLowerCase() == "true") {
            ShowResult("Fail", "This transaction already posted!");
            return;
        }

        var SessionYear = $('.cSessionYear').val();
        $('.cSubmitYear').val(SessionYear);

        var myData = $('#afrmEmployeeEdit').serialize();
        var url = "/Payroll/TAX108A/Update";
        submit(url, myData);

    });

    $('#PostJSON').click(function () {

        var Post = $('.cPost').val();

        var Code = $('#Code').val();
        if (Code == "") {
            ShowResult("Fail", "Please Select Code!");
            return;
        }

        if (Post.toLowerCase() == "true") {
            ShowResult("Fail", "This transaction already posted!");
            return;
        }

        var myData = $('#afrmEmployeeEdit').serialize();
        var url = "/Payroll/TAX108A/Post";
        submit(url, myData);
        //location.reload();

    });


</script>


