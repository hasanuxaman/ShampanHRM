@model SymViewModel.Payroll.BonusProcessVM
@{
    ViewBag.Title = "Earning Leave Report";
}
@using UIHelper.MVC

@using SymOrdinary
@using System.Threading;
@{
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/Home/Index");
        return;
    }
}
@using (Html.BeginForm("EarningLeaveProcessCreate", "EarningLeaveProcess", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "FormBonusReport" }))
{
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Bonus Process Report</p>
        </div>

        <div class="row">
            <div class="col-md-1">
                <div class="editor-label">
                    <label>Year</label>
                </div>

                <div class="editor-field">
                    <div>@Html.TextBox("fYear", @Session["SessionYear"].ToString(), new { @class = "fiscalyearCom form-control" }) </div>
                </div>
            </div>

            <div class="col-md-2">
                <div class="editor-label">
                    <label>Fiscal Period</label>
                </div>

                <div class="editor-field">
                    <div>
                        @Html.SimpleDropDown("FiscalPeriodDetailId", "/Config/DropDown/DropDownPeriodByFYear?year=" + @Session["SessionYear"].ToString(), new { @class = "fpDetailsCom  required form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Fiscal Period(To)</label>
                </div>

                <div class="editor-field">
                    <div>
                        @Html.SimpleDropDown("FiscalPeriodDetailIdTo", "//", new { @Text = "test", @class = "required fpDetailsComTo form-control" })
                    </div>
                </div>
            </div>
            
            <div class="col-md-2">
                <div class="editor-label">
                    <label>BFTN Payment Date</label>
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentDay, new { @placeholder = "Payment Date", @class = " PaymentDay customDatePicker  form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentDay)
                </div>
            </div>
            @if (identity.IsAdmin || identity.IsPayroll)
            {
                <div class="col-md-2">
                    <div class="editor-label">
                        <label>Emp Code(From)</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.CodeF, "/Config/DropDown/EmployeeCodeName", new { @class = "codeFCom form-control selectDropdown" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        <label>Emp Code(To)</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.CodeT, "/Config/DropDown/EmployeeCodeName", new { @class = "codeTCom form-control selectDropdown" })

                    </div>
                </div>
            }
        </div>

        @if (identity.IsAdmin || identity.IsPayroll)
        {

            <div class="row">
                <div class="col-md-3">
                    <div class="editor-label">
                        <label>Designation</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.DesignationId, "/Config/DropDown/Designation", new { @class = " form-control" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="editor-label">
                        <label>@Session["DepartmentLabel"]</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.DepartmentId, "/Config/DropDown/Department", new { @class = "departmentsCom form-control" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="editor-label">
                        <label>@Session["SectionLabel"]</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.SectionId, "/Config/DropDown/Section", new { @class = "sectionsCom form-control" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="editor-label">
                        <label>@Session["ProjectLabel"]</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.ProjectId, "/Config/DropDown/Project", new { @class = "required projectsCom form-control" })
                    </div>
                </div>
                @*        <div class="col-md-2">
                        <div class="editor-label">
                            <label>Report Group</label>
                        </div>
                        <div class="editor-field">
                            @Html.SimpleDropDownFor(model => model.ReportGroup", "/Config/DropDown/PFTaxRptParamName", new { @id = "", @class = "ReportGroup required form-control" })
                        </div>
                    </div>*@

            </div>

            <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        <label>Report Name</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.SheetName, "/Config/DropDown/DropDownReport?ReportType=EarnLeave", new { @class = "required cSheetName form-control " })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="editor-label">
                        <label>Order By</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.Orderby, "/Config/DropDown/EnumOrderBy?Module=Salary", new { @class = "required form-control " }) @*selectDropdown*@
                    </div>
                </div>
            </div>

            <div class="col-md-2">
            </div>
        }
    </div>

    <div class=" headrow">
        &nbsp;
        @*<button title="Click to Show Report" id="sendRpt" data-url="/Payroll/BonusProcess/BonusReport" class="btn sym-btn-report" style="display:none">&nbsp;Report</button>*@

        @*    <div class="col-md-2">
                <button title="Click to Show Employee Statement" id="sendStatement" data-url="/Payroll/BonusProcess/BonusReport" class="btn sym-btn-report">&nbsp;Employee Statement</button>
            </div>*@
        &nbsp;
        @*<button title="Click to Show Bonus List" id="Searchbtn" class="btn sym-btn-search">&nbsp;Search</button>*@
        <button title="Click to Show Report" id="sendRpt" data-url="/Payroll/EmployeeEarningLeave/EarningLeaveReport" class="btn sym-btn-report" type="button">&nbsp;Report</button>

        &nbsp;
        @*<button title="Click to Summary Report" id="sendRpt" data-url="/Payroll/EmployeeEarningLeave/EarningLeaveReportSummary" class="btn sym-btn-report" type="button">&nbsp;Report(Summary)</button>*@

        &nbsp;
        <button aria-disabled="true" type="button" title="Clear the Entries" id="Clear" class="sym-btn-clear">&nbsp;Clear</button>

        &nbsp;
        @*<button type="button" title="Click to Download" id="btnDownload" class=" sym-btn-Excel-Export">&nbsp;Download Report</button>*@
        <button title="Click to Show Excel Download" id="Excel" data-url="/Payroll/EmployeeEarningLeave/EarningLeaveExcel" class="btn sym-btn-Excel-Export" type="button">&nbsp;Download</button>
        @*<button title="Click to Show Excel Download Summary" id="Excel" data-url="/Payroll/EmployeeEarningLeave/EarningLeaveSummaryExcel" class="btn sym-btn-Excel-Export" type="button">&nbsp;Download Summary</button>*@



    </div>

    <div id="detailsDiv">
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(function () {
            InitDropdownsCommon();
            //defaultLoad();
        });
        //function defaultLoad() {
        //    $('select.fpDetailsComTo').html("<option value=0>Select</option>");
        //}

        
       

        $(function () {
            $("#sendRpt, #sendStatement").click(function () {
                var url = $(this).attr("data-url");
                var Id = $(this).attr("Id");
                rpt(Id, url);
            });
            $("#Excel, #sendStatement").click(function () {
                var url = $(this).attr("data-url");
                var Id = $(this).attr("Id");
                rpt(Id, url);
            });

            function rpt(Id, url) {
                var fid = $("#FiscalPeriodDetailId").val();
                var fidTo = $("#FiscalPeriodDetailIdTo").val();
                var BonusNameId = $("#BonusNameId").val();
                var ProjectId = $("#ProjectId").val();
                var DepartmentId = $("#DepartmentId").val();
                var SectionId = $("#SectionId").val();
                var DesignationId = $("#DesignationId").val();
                var CodeF = $("#CodeF").val();
                var CodeT = $("#CodeT").val();
                var rptPG = $(".ReportGroup option:selected").text();
                var Orderby = $("#Orderby").val();
                var BonusStatus = $("#BonusStatus").val();
                var SheetName = $("#SheetName").val();
                var PaymentDay = $("#PaymentDay").val();
                console.log(SheetName)
                var Statement = "";
                if (BonusNameId == "") {
                    ShowResult('Fail', "Please Select  Bonus Name!");
                    return false;
                }
                if (SheetName == "") {
                    ShowResult('Fail', "Please Select  Report Name!");
                    return false;
                }
                if (fid == "") {
                    ShowResult('Fail', "Please Select  Fiscal Period From!");
                    return false;
                }
                if (fidTo == "0") {
                    ShowResult('Fail', "Please Select  Fiscal Period To!");
                    return false;
                }
                if (ProjectId == "") {
                    ShowResult('Fail', "Please Select the Project");
                    return false;
                }
                if (PaymentDay == "") {
                    ShowResult('Fail', "Please Select the Payment Date");
                    return false;
                }
                if (Id == "sendRpt") {
                    //if (rptPG == "Select") {
                    //    ShowResult('Fail', "Please Select  Report Group!");
                    //    return false;
                    //}
                    if (Orderby == "") {
                        ShowResult('Fail', "Please Select Order By ");
                        return false;
                    }
                }
                else if (Id == "sendStatement") {
                    Statement = "y";
                }

                url = url
                  
                    + '?ProjectId=' + ProjectId
                    + '&DepartmentId=' + DepartmentId
                    + '&SectionId=' + SectionId
                    + '&DesignationId=' + DesignationId
                    + '&CodeF=' + CodeF
                    + '&CodeT=' + CodeT
                    + '&Orderby=' + Orderby
                    + '&view=N'
                    + '&fid=' + fid
                    + '&fidTo=' + fidTo
                    + '&SheetName=' + SheetName
                    + '&PaymentDay=' + PaymentDay
                   
                var win = window.open(url, '_blank');
            }
        });

        $("#Clear").on('click', function () {
            $(".Dropdown").select2("val", "");
            $(".thinbox :input").val("");

        });

        $("#Searchbtn").click(function () {
            Searching();
        });

        function Searching() {
            var BonusNameId = $("#BonusNameId").val();
            if (BonusNameId == "") {
                ShowResult('Fail', "Please Select  Bonus Name!");
                return false;
            }

            var ProjectId = $("#ProjectId").val();
            var DepartmentId = $("#DepartmentId").val();
            var SectionId = $("#SectionId").val();
            var DesignationId = $("#DesignationId").val();
            var CodeF = $("#CodeF").val();
            var CodeT = $("#CodeT").val();
            var Orderby = $("#Orderby").val();


            var url = '/Payroll/BonusProcess/_rptIndexPartial?'
                + 'BonusNameId=' + BonusNameId
                + '&ProjectId=' + ProjectId
                + '&DepartmentId=' + DepartmentId
                + '&SectionId=' + SectionId
                + '&DesignationId=' + DesignationId
                + '&CodeF=' + CodeF
                + '&CodeT=' + CodeT
                + '&Orderby=' + Orderby;

            $.ajax({
                url: url,
                type: 'GET',
                beforeSend: function () { $(".loading").show(); },
                complete: function () { $(".loading").fadeOut(200).hide("slow") },
                success: function (data) {
                    $('#detailsDiv').html(data);
                },
            });
        }
    </script>

    <script>
        $('#btnDownload').click(function () {

            var bNameId = $("#BonusNameId").val();
            var Orderby = $("#Orderby").val();

            var SheetName = $("#SheetName").val();



            if (bNameId == 0 || bNameId == "") {
                ShowResult("Fail", "Please Select the Bonus Name!");
                return;
            }

            if (SheetName == "") {
                ShowResult('Fail', "Please Select Report ");
                return false;
            }


            if (Orderby == "") {
                ShowResult("Fail", "Please Select Order By!");
                return;
            }


            var MultipleOther3 = $('#MultiOther3').val();
            $('#MultipleOther3').val(MultipleOther3);


            var $FormBonusProcess = $("#FormBonusReport");
            $FormBonusProcess.attr("target", "_blank");
            $FormBonusProcess.attr("action", "/Payroll/EmployeeEarningLeave/ExcelReport").submit();


        });

    </script>
}

