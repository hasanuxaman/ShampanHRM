@model SymViewModel.HRM.EmployeeInfoVM
@using UIHelper.MVC
<style>
    input[type='text'], input[type='password'], textarea {
        margin: 0px!important;
    }
</style>
@using (Html.BeginForm("Create", "SalaryPF", FormMethod.Post, new { @Id = "afrmSalaryPFCreate" }))
{   
    <div class="row">
        <div class="col-md-4">
            <div class="thinbox">
                <div class="th_thinbox">
                    <p>@Model.EmpName</p>
                </div>
                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.FiscalYearDetailId)
         
                    <div class="editor-label col-md-4 ">
                        <label><b>Code</b> </label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Code, new { @placeholder = "Employee Code", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                    <div class="editor-label col-md-4">
                        @Html.LabelFor(model => model.JoinDate)
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.JoinDate, new { @placeholder = "Employee Join Date", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.JoinDate)
                    </div>
                    <div class="editor-label col-md-4">
                        @Html.LabelFor(model => model.Designation)
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Designation, new { @placeholder = "Employee Designation", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Designation)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["DepartmentLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Department, new { @placeholder = "Employee Department", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Department)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["SectionLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Section, new { @placeholder = "Employee Section", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Section)
                    </div>
                    <div class="editor-label col-md-4">
                        <label>@Session["ProjectLabel"]</label>
                    </div>
                    <div class="editor-field col-md-8">
                        @Html.TextBoxFor(model => model.Project, new { @placeholder = "Employee Project", @class = "  form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Project)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="thinbox">
                <div class="PFdatail">
                <div class="row">
                <div class="col-md-3">
                    <div class="editor-label">
             @Html.LabelFor(model => model.saPFDvm.PFValue)
                        @Html.HiddenFor(model => model.saPFDvm.FiscalYearDetailId)
                          @Html.HiddenFor(model => model.saPFDvm.EmployeeId, new { @class = "emplpfid" })
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.saPFDvm.PFValue, new { @class = "PFvalue NumberCheck required  form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.saPFDvm.Remarks)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.saPFDvm.Remarks, new { @class = "  form-control" })
                        @Html.ValidationMessageFor(model => model.saPFDvm.Remarks)
                    </div>
                </div>
                </div>
                <br />
                <div class="headrow">
                    <button type="button" title="Save Data" id="SaveJSON" class=" Save sym-btn-save">&nbsp;Save</button>
                      <button type="button" title="Save Data" id="UpdateJSON" class=" Save sym-btn-update"> Update</button>
                    <button type="button" title="Delete Data" id="DeleteJSON" class=" Save sym-btn-remove">&nbsp;Delete</button>
                </div>
                    </div>
                <div id="noPFempid">
                   <h2> This Employee has no Provident Fund Structure assigned yet.</h2>
                </div>
                
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        InitDropDowns();
        $("#noPFempid").hide();
        if ('@Model.Code' == null || '@Model.Code' == "") {
            $('#empId').val("");
        }
        else {
            setTimeout(function () { $(".selectDropdown").val('@Model.Code').trigger('change'); }, 200);
         }
        //$('#empId').val('@Model.Code~@Model.EmpName');
        checktaxvalue();
        checkpfvalue();
    });
    $('#DeleteJSON').click(function () {
        var myData = $('#afrmSalaryPFCreate').serialize();
        var url = "/Payroll/SalaryPF/Create";
        submit(url, myData);
        $('.DeductionAmount').val('0');
    });
    $('#SaveJSON,#UpdateJSON').click(function () {

        var FiscalYearDetailId = $('#FiscalYearDetailId').val();

        if (FiscalYearDetailId == "") {
            ShowResult('Fail', "Please Select Fiscal year");
            return;
        }

        var url = "/Common/FiscalYear/FiscalPeriodLockCheck?FiscalYearDetailId=" + FiscalYearDetailId;

        $.ajax({
            url: url
               , type: 'Post'
               , traditional: true
               , beforeSend: function () { $(".loading").show(); }
               , success: SaveUpdateData
            , complete: function () { $(".loading").fadeOut(200).hide("slow") }
        });

        
    });

    function SaveUpdateData(result) {
        var results = result.split("~");
        if (results[0].toLowerCase() == 'true') {

            ShowResult("Fail", results[1]);

        }
        else {

            var myData = $('#afrmSalaryPFCreate').serialize();

            var url = "/Payroll/SalaryPF/Create";

            submit(url, myData);

        }

    }


    var submit = function (url, mydata) {
        $.ajax({
            type: 'POST',
            data: mydata, // #2
            url: url,
            beforeSend: function () { $(".loading").show();  },
            complete: function () { $(".loading").hide(); },
            success: function (result) {
                var msg1 = result.split('~')[0];
                var msg2 = result.split('~')[1];
                if (msg1 != "Fail") {
                    ShowResult("Success", msg2);
                }
                else {
                    ShowResult("Fail", msg2);
                }
            }
        });
    }
    function checktaxvalue() {
        var Pfvalue = $(".Pfvalue").val();
        if (Pfvalue == 0) {
            $("#SaveJSON").show();
            $("#UpdateJSON").hide();
        }
        else {
            $("#SaveJSON").hide();
            $("#UpdateJSON").show();
        }
    }
    function checkpfvalue() {
        var emPFid = $(".emplpfid").val();
        if (typeof emPFid == undefined || emPFid == "" || emPFid == null) {
            $(".PFdatail").hide("slow");
            $("#noPFempid").show();
        }
        else {
            $(".PFdatail").show();
            $("#noPFempid").hide();
        }
    }


</script>
