@model SymViewModel.Payroll.BonusNameVM

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "BonusName", FormMethod.Post, new { @Id = "frmBonusName" }))
{
    @Html.ValidationSummary(true)

    <div class="thinbox">
        <div class="BonusName">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Code, null, new { @placeholder = "BonusName Code", @class = "required form-control" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Name, null, new { @placeholder = "BonusName Name", @class = "required form-control" })
            </div>
        </div>
             <div class="row">
                    <label class="col-sm-4">
                         @Html.LabelFor(model => model.IsActive)
                    </label>
                <div class="col-sm-1">
                @Html.CheckBoxFor(model => model.IsActive, new { @class = " form-control" })
            </div> 
        </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Remarks)
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Remarks, null, new { @placeholder = "Remarks", @class = " form-control" })
                </div>
            </div>

        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.FestivalDate)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.FestivalDate, null, new { @placeholder = "Festival Date", @class = "required form-control customDatePicker" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.IssueDate)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.IssueDate, null, new { @placeholder = "Issue Date", @class = "required form-control customDatePicker" })
            </div>
        </div>

             <div class="row">
            <label class="col-sm-3">
			<button type="button" title="Edit Data" onclick="Edit();" class="Edit sym-btn-edit">&nbsp;Edit</button>
              <button type="button" title="Save Data" onclick="pageSubmit('frmBonusName');" class="Save sym-btn-save">&nbsp;Save</button>
            </label>
            <label class="col-sm-4">
				 <button type="button" title="Cancel Data" class=" btncancel sym-btn-cancel">&nbsp;Cancel</button>
            </label>
        </div>
        </div>
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.BranchId)
       

    </div>
}
<script src="~/assets/javascripts/custom.js"></script>

<script>
    $(function () {
        Edit();
        valiDation("frmBonusName");
    });
    function Edit() {
        fnReadOnly("BonusName");
        if ($(".BonusName").hasClass("readOnly")) {
            $(".Save").hide();
            $(".Edit").show();
        }
        else {
            $(".Save").show();
            $(".Edit").hide();
        }
    }
</script>
