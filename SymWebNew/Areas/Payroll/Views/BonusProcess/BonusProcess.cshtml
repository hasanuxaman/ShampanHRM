@model SymViewModel.Payroll.BonusProcessVM


@{
    ViewBag.Title = "BonusProcess";
}

@using UIHelper.MVC

@using (Html.BeginForm("BonusProcessCreate", "BonusProcess", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "FormBonusProcess" }))
{
    <div class="headrow">
        <button type="button" title="Go To Index" data-url="/Payroll/BonusProcess" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <label class="pull-right">Bonus Process</label>
    </div>
    <div class="thinbox" id="">
        <div class="th_thinbox">
            <p>Bonus Process</p>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.EffectDate)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.EffectDate, new { @placeholder = "Effect Date", @class = " trDate  customDatePicker required form-control" })
                    @Html.ValidationMessageFor(model => model.EffectDate)
                </div>
            </div>


            <div class="col-md-3">
                <div class="editor-label">
                    <label>Bonus Name</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.BonusNameId, "/Config/DropDown/BonusTypeList", new { @class = "required form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Bonus Policy</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.BonusStructureId, "/Config/DropDown/BonusStructureList", new { @class = "required form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Emp Code (From)</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.CodeF, "/Config/DropDown/EmployeeCodeName", new { @class = "codeFCom form-control selectDropdown" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Emp Code (To)</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.CodeT, "/Config/DropDown/EmployeeCodeName", new { @class = "codeTCom form-control selectDropdown" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Designation</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.DesignationId, "/Config/DropDown/Designation", new { @class = " form-control" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="editor-label">
                    <label>@Session["DepartmentLabel"]</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.DepartmentId, "/Config/DropDown/Department", new { @class = "departmentsCom form-control" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                <div class="editor-label">
                    <label>@Session["SectionLabel"]</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.SectionId, "/Config/DropDown/Section", new { @class = "sectionsCom form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>@Session["ProjectLabel"]</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.ProjectId, "/Config/DropDown/Project", new { @class = "projectsCom form-control" })
                </div>
            </div>

        </div>
    </div>

    <div class="headrow">
        <button type="button" title="Go To Index" data-url="/Payroll/BonusProcess" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Click to Process Bonus" id="saveJSON" class=" sym-btn-save">&nbsp;Process</button>
        <button type="button" title="Click to Download" id="btnDownload" class=" sym-btn-Excel-Export">&nbsp;Download</button>
    </div>
}

<div class="thinbox">
    <div class="th_thinbox">
        <p>Bonus Import </p>
    </div>
    <div class="row">
        @using (Ajax.BeginForm("UploadExcel", "BonusProcess", null, new AjaxOptions { }, new { enctype = "multipart/form-data", id = "frmUploadExcel" }))
        { 
            <div class="col-md-3 col-md-offset-4 ">
                <label>File</label>
                <input type="File" accept=".xlsx" name="file" id="FileUpload" style="width: 200px;" class="required" />
            </div>
            <div class="col-md-3">
                <label>&nbsp;</label>
                <button type="button" onclick="pageSubmit('frmUploadExcel');" title="Bonus Import" class="sym-btn-file-upload" value="Upload" style="width: 50%; text-align: center;">&nbsp;Upload</button>
            </div>
        }
    </div>
</div>


<script>
    $(function () {
        InitDropdownsCommon();
    });



    $('#saveJSON').click(function () {

        var EffectDate = $("#EffectDate").val();

        if (EffectDate == null || EffectDate == "") {
            ShowResult("Fail", "Please Select EffectDate First!");
            return;
        }

        var bNameId = $("#BonusNameId").val();
        var bStructureId = $("#BonusStructureId").val();


        if (bNameId == 0) {
            ShowResult("Fail", "Please Select the Bonus Name!");
            return;
        }
        if (bStructureId == 0) {
            ShowResult("Fail", "Please Select the Bonus Structure!");
            return;
        }

        var url = "/Common/FiscalYear/FiscalPeriodLockCheck_PeriodDate?PeriodDate=" + EffectDate;

        $.ajax({
            url: url
               , type: 'Post'
               , traditional: true
               , beforeSend: function () { $(".loading").show(); }
               , success: BonusProcess
            , complete: function () { $(".loading").fadeOut(200).hide("slow") }
        });

    });

    function BonusProcess(result) {
        var results = result.split("~");
        if (results[0].toLowerCase() == 'true') {

            ShowResult("Fail", results[1]);

        }
        else {

            var url = "/Payroll/BonusProcess/BonusProcessCreate";

            var model = $("#FormBonusProcess :input").serialize();

            submit(url, model);

        }

    }


    $('#btnDownload').click(function () {

        var bNameId = $("#BonusNameId").val();
        var bStructureId = $("#BonusStructureId").val();


        if (bNameId == 0) {
            ShowResult("Fail", "Please Select the Bonus Name!");
            return;
        }

        var $FormBonusProcess = $("#FormBonusProcess");
        $FormBonusProcess.attr("target", "_blank");
        $FormBonusProcess.attr("action", "/Payroll/BonusProcess/DownloadExcel").submit();


    });



</script>

