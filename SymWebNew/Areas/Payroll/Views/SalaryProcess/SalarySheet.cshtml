@model SymViewModel.Payroll.SalarySheetVM

@using UIHelper.MVC
@using SymOrdinary
@using System.Threading;
@{
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/Home/Index");
        return;
    }
}

@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm("SalarySheet", "SalaryProcess", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmSalarySheet", @target = "_blank" }))
{
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Salary Sheet</p>
        </div>
        <div class="row">
            <div class="col-md-1">
                <div class="editor-label">
                    <label>Year</label>
                </div>
                <div class="editor-field">
                    <div>@*@Html.TextBox("FiscalYear", @Session["SessionYear"] as string, new { @class = "fiscalyearCom form-control" })*@ </div>
                    @Html.SimpleDropDown("FiscalYear", "/Config/DropDown/DropDownYear", new { @class = " fiscalyearCom required form-control selectDropdown" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Fiscal Period</label>
                </div>
                <div class="editor-field">
                    <div>
                        @Html.SimpleDropDownFor(model => model.FiscalYearDetailId, "/Config/DropDown/DropDownPeriodByFYear?year=" + @Session["SessionYear"].ToString(), new { @class = " fpDetailsCom required form-control selectDropdown" })
                    </div>
                </div>
            </div>
            @*<div class="col-md-2">
                    <div class="editor-label">
                        <label>Fiscal Period(To)</label>
                    </div>

                    <div class="editor-field">
                        <div>
                            @Html.SimpleDropDownFor(model => model.FiscalYearDetailIdTo, "/Config/DropDown/DropDownPeriodByFYear?year=" + @Session["SessionYear"].ToString(), new { @class = "required fpDetailsComTo form-control  selectDropdown" })
                        </div>
                    </div>
                </div>*@

            <div class="col-md-2">
                <div class="editor-label">
                    <label>BFTN Payment Date</label>
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentDate, new { @placeholder = "Payment Date", @class = " PaymentDate customDatePicker  form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentDate)
                </div>
            </div>

            <div class="col-md-3">
                <div class="editor-label">
                    <label>Emp Code(From)</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.CodeFrom, "/Config/DropDown/EmployeeCodeName", new { @class = "codeFCom form-control selectDropdown" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Emp Code(To)</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.CodeTo, "/Config/DropDown/EmployeeCodeName", new { @class = "codeTCom form-control selectDropdown" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Designation</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.DesignationId, "/Config/DropDown/Designation", new { @class = "form-control Dropdown " })
                </div>
            </div>

            @if (Session["LabelOther1"].ToString() != "")
            {
                <div class="col-md-4">
                    <div class="editor-label">
                        <label>@Session["LabelOther1"]</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.Other1, "/Config/DropDown/OtherInfo?infoType=Other1", new { @class = " other1 form-control" })
                    </div>
                </div>
            }
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Employment Type</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.EmploymentType_E, "/Config/DropDown/EmploymentType", new { @placeholder = "Employment Type", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmploymentType_E)
                </div>
            </div>
            @if (Session["LabelOther2"].ToString() != "")
            {
                <div class="col-md-4">
                    <div class="editor-label">
                        <label>@Session["LabelOther2"]</label>
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.Other2, "/Config/DropDown/OtherInfo?infoType=Other2", new { @class = " other2 form-control" })
                    </div>
                </div>
            }

            @if (Session["LabelOther3"].ToString() != "")
            {
                <div class="col-md-4">
                    <div class="editor-label">
                        <label>@Session["LabelOther3"]</label>
                    </div>
                    <div class="editor-field">
                        @*@Html.SimpleDropDown("Other3", "/Config/DropDown/OtherInfo?infoType=Other3", new { @class = " other3 form-control" })*@
                        @Html.SimpleDropDownFor(model => model.MultiOther3, "/Config/DropDown/OtherInfo?infoType=Other3", new { @placeholder = "Multiple " + @Session["LabelOther3"], @class = "mulitpleOther3 form-control selectDropdown", @multiple = "multiple" })
                        @Html.HiddenFor(model => model.MultipleOther3)
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-md-3">
                <div class="editor-label">
                    <label>@Session["DepartmentLabel"]</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.DepartmentId, "/Config/DropDown/Department", new { @class = "form-control  departmentsCom " })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>@Session["SectionLabel"]</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.SectionId, "/Config/DropDown/Section", new { @class = "sectionsCom form-control " })
                </div>
            </div>
            <div class="col-md-6">
                <div class="editor-label">
                    <label>@Session["ProjectLabel"]</label>
                </div>
                <div class="editor-field">
                    @*@Html.SimpleDropDown("ProjectId", "/Config/DropDown/Project", new { @class = "projectsCom form-control " })*@
                    @Html.SimpleDropDownFor(model => model.MultiProjectId, "/Config/DropDown/Project", new { @placeholder = "Multiple Projects", @class = "mulitpleProjectId form-control selectDropdown", @multiple = "multiple" })
                    @Html.HiddenFor(model => model.MultipleProjectId)

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="editor-label">
                    @Html.Label("", "Bank Name")
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.BankId, "/Config/DropDown/Bank", new { @class = " bankId form-control" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="editor-label">
                    <label>Report Name</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.SheetName, "/Config/DropDown/DropDownReport?ReportType=SalarySheet", new { @class = "required form-control " })
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Order By</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.Orderby, "/Config/DropDown/EnumOrderBy?Module=Salary", new { @class = "required form-control" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Hold Status</label>
                </div>
                <div class="editor-field">
                    @Html.SimpleDropDownFor(model => model.HoldStatus, "/Config/DropDown/HoldStatus", new { @class = " form-control" })
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.View)

    <div class="headrow">
        @*@Html.ActionLink(" Report", "SalarySheet", null, new { title = "Click to Show Report", target = "_blank", id = "sendRpt", @class = "btn sym-btn-report" })*@

        <button type="button" data-url="/Payroll/SalaryProcess/SalarySheet" title="Click to see the Report" id="" class=" sendRpt sym-btn-report">&nbsp;Report</button>
        <button type="button" data-url="/Payroll/SalaryProcess/DownloadSalarySheet" id="" title="Click to Download the Report" class=" sendRpt sym-btn-Excel-Export">&nbsp;Download</button>
        @*<button type="button" data-url="/Payroll/SalaryProcess/SalaryApproveRequest" id="" title="Click to Approval Request" class=" sendRpt2 sym-btn-Excel-Export">&nbsp;Approval Request</button>*@

        

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            //$('.Dropdown').select2();
            //$(".Dropdown").removeClass("form-control");
            //////InitDropDowns();
            InitDropdownsCommon();

            $("#FiscalYearDetailId").addClass("required");

        });

        $('.sendRpt').click(function () {
            var fid = $("#FiscalYearDetailId").val();
           var a= $("#FiscalYearDetailId option:selected").text();
            var SheetName = $("#SheetName").val();
            var Orderby = $("#Orderby").val();
            var PaymentDate = $("#PaymentDate").val();


            if (fid == "") {
                ShowResult('Fail', "Please Select  Fiscal Year");
                return false;
            }
            if (SheetName == "") {
                ShowResult('Fail', "Please Select Report ");
                return false;
            }

            if (Orderby == "") {
                ShowResult('Fail', "Please Select Order By ");
                return false;
            }

            var fidTo = $("#FiscalYearDetailIdTo").val();

            if (fidTo == null || fidTo == "" || fidTo == "0") {
                $("#FiscalYearDetailIdTo").select2("val", fid);
            }

            if (SheetName == "SalarySheet9" || SheetName == "SalarySheet10") {
                if (PaymentDate == "" || PaymentDate == null) {
                    ShowResult('Fail', "Please Select Payment Date ");
                    return false;
                }
            }

            var MultipleProjectId = $('#MultiProjectId').val();
            var MultipleOther3 = $('#MultiOther3').val();

            $('#MultipleProjectId').val(MultipleProjectId);
            $('#MultipleOther3').val(MultipleOther3);

            $('#View').val("N");


            var url = $(this).attr("data-url");

            //var url = '/VMS/SaleInvoice/ExportExcell';
            $form = $('#frmSalarySheet');

            $form.attr("action", url);
            $form.submit();

        });


        $('.sendRpt2').click(function () {
            var fid = $("#FiscalYearDetailId").val();
            console.log(fid)
            if (fid == "") {
                ShowResult('Fail', "Please Select  Fiscal Year");
                return false;
            }

            var fidTo = $("#FiscalYearDetailIdTo").val();

            if (fidTo == null || fidTo == "" || fidTo == "0") {
                $("#FiscalYearDetailIdTo").select2("val", fid);
            }

            var url = $(this).attr("data-url");

            //var url = '/VMS/SaleInvoice/ExportExcell';
            $form = $('#frmSalarySheet');

            $form.attr("action", url);
            $form.submit();

        });



    </script>



}

