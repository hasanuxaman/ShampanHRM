@model SymViewModel.Payroll.ProjectAllocationDetailVM
@using UIHelper.MVC
@{
    Layout = null;
}
<tr class="pa">
       @using (Html.BeginCollectionItem("ProjectAllocationDetailVM"))
       { 
          @Html.HiddenFor(model => model.Id)
       
        @Html.HiddenFor(model => model.ProjectAllocationId)

           <th >
                @Html.DisplayFor(model => model.HeadName, new { @class = " form-control" })
             @Html.HiddenFor(model => model.HeadName, new { @class = " form-control " })
           </th>
           <td>
                 @Html.TextBoxFor(model => model.GLCode1, new { @placeholder = "GLCode1", @class = " form-control required" })
                @Html.ValidationMessageFor(model => model.GLCode1)
           </td>
           <td>
                @Html.TextBoxFor(model => model.Portion1, new { @placeholder = "Portion1", @class = "calc right portion1 form-control required", @onchange = "minmax1(this,1,100)" })
                @Html.ValidationMessageFor(model => model.Portion1)
           </td>
             <td>
                   @Html.TextBoxFor(model => model.GLCode2, new { @placeholder = "GLCode2", @class = " form-control required" })
                @Html.ValidationMessageFor(model => model.GLCode2)
           </td>    <td>
                 @Html.TextBoxFor(model => model.Portion2, new { @placeholder = "Portion2", @class = "portion2 right calc form-control required", @onchange = "minmax1(this,1,100)" })
                @Html.ValidationMessageFor(model => model.Portion2)
           </td>  <td>
               
                   @Html.TextBoxFor(model => model.GLCode3, new { @placeholder = "GLCode3", @class = " form-control required" })
                @Html.ValidationMessageFor(model => model.GLCode3)
           </td>  <td>
                 @Html.TextBoxFor(model => model.Portion3, new { @placeholder = "Portion3", @class = "portion3 right calc form-control required", @onchange = "minmax1(this,1,100)" })
                @Html.ValidationMessageFor(model => model.Portion3)
           </td>  <td>
               
                   @Html.TextBoxFor(model => model.GLCode4, new { @placeholder = "GLCode4", @class = " form-control required " })
                @Html.ValidationMessageFor(model => model.GLCode4)
           </td>  <td>
                 @Html.TextBoxFor(model => model.Portion4, new { @placeholder = "Portion4", @class = "portion4 right calc form-control required", @onchange = "minmax1(this,1,100)" })
                @Html.ValidationMessageFor(model => model.Portion4)
           </td>  
           <td>
                @Html.TextBoxFor(model => model.Total, new { @placeholder = "Total", @class = "totalprotion right form-control  required", @onchange = "minmax1(this,1,100)" })
           </td>
       }
</tr>
<script>
    function minmax1(value, min, max) {
        //$(value).attr({ type: "number", min: "0", step: "0.01" });

        var a = $(value).val();
        var total=$(".totalprotion").val();
        if (!$.isNumeric(a)) {
            $(value).val("0")
            ShowResult("Fail", "Please Enter Numeric data");
            return;
        }
        else {
            //alert(val);
            if (parseInt(a) < min || isNaN(parseInt(a)) ) {
                $(value).val("0")
                ShowResult("Fail", "Please Enter Greater than")
                return;
            }
            else if (parseInt(a) > max ) {
                $(value).val("0")
                ShowResult("Fail", "Please Enter Less than")
                return;
            }
            else if (total >= 101) {
                $(value).val("0");
                return value;
            }
            else
            {
                return value;
            }
        }
   
    }
</script>