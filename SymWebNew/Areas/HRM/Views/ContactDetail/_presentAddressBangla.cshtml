@model SymViewModel.HRM.EmployeeInfoVM

@using (Html.BeginForm("PresentAddressBangla","ContactDetail"))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.presentAddressBangla.Id)
    @Html.HiddenFor(model => model.presentAddressBangla.EmployeeId)
    <div class="thinbox">
        <div class="presentAddressBangla">
            <div class="row">
                <div class="col-sm-12">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.Address)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.presentAddressBangla.Address, new { @placeholder = "Address",@rows="1", @class = " form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.Country)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddressBangla.Country, null, new { onfocusout="CodeCheck(this,'Country')", @placeholder = "Country", @class = "country form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.Division)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddressBangla.Division, null, new { onfocusout="CodeCheck(this,'Division')", @placeholder = "Division", @class = " division  form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.District)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddressBangla.District, null, new {onfocusout="CodeCheck(this,'District')", @placeholder = "District", @class = "district  form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.City)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddressBangla.City, null, new { @placeholder = "City", @class = " form-control" })
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddressBangla.Remarks)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.presentAddressBangla.Remarks, new { @placeholder = "Remarks",@rows="1", @class = " form-control" })
                    </div>
                </div>
            </div>
            <br />
            @if (Model.IsActive)
            {
                  <button type="submit"  title="Save Data" class="sym-btn-save">&nbsp;Save</button>
 <button type="button" title="Edit Data"  onclick="EditPermanentAddressBangla();" class=" Edit sym-btn-edit">&nbsp;Edit</button>
                @*<input type="Submit" value="Save" class="Save btn btn-primary" />*@
                @*<input type="button" value="Edit" onclick="EditPresentAddressBangla();" class="Edit btn btn-primary" />*@   
            }
           <button type="button" title="Cancel Data"  onclick="Cancle();" class="Cancle sym-btn-cancel">&nbsp;Cancel</button>

        </div>
    </div>
}
<script>
    $(function () {
        EditPresentAddressBangla();
        $('.country').autocomplete({ source: '@Url.Action("Country", "Autocomplete", new { area = "Config" })', minLength: 2 });
        $('.division').autocomplete({ source: '@Url.Action("Division", "Autocomplete", new { area = "Config" })', minLength: 2 });
        $('.district').autocomplete({ source: '@Url.Action("District", "Autocomplete", new { area = "Config" })', minLength: 2 });  
    });

</script>
