@model SymViewModel.HRM.EmployeeInfoVM
@using SymOrdinary
@using System.Threading;
@{ 
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/Home/Index");
        return;
    }
}

@using (Html.BeginForm("Nominee", "DependentNominee", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmNominee" }))
{
    @Html.ValidationSummary(true)


    <div class="nominee">
        @Html.HiddenFor(model => model.nomineeVM.EmployeeId)
        @Html.HiddenFor(model => model.nomineeVM.Id)
        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Name)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Name, new { @placeholder = "Nominee Name", @class = "required form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Relation)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Relation, new { @placeholder = "Relation", @class = "required form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.DateofBirth)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.DateofBirth, new { @onchange = "DateOfBirth(this)", @placeholder = "Date of Birth", @class = "required customDatePicker form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.BirthReg)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.BirthReg, new { @placeholder = "Birth Certificate", @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Address)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.nomineeVM.Address, new { @placeholder = "Village/House & Road", @rows = "1", @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.PostalCode)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.PostalCode, new { @placeholder = "Postal Code", @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.PostOffice)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.PostOffice, new { @placeholder = "Post Office", @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.City)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.City, new { @placeholder = "Police Station", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Country)
                </div>
                <div class="editor-field">
                    <select id="nomineeVM.Country" name="nomineeVM.Country" data-val="@Model.nomineeVM.Country"  data-url="/Config/DropDown/CountryEN/"  class = " country form-control" ></select>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Division)
                </div>
                <div class="editor-field">
                    <select id="nomineeVM.Division" name="nomineeVM.Division" data-val="@Model.nomineeVM.Division"  data-url="/Config/DropDown/Division/"  class = " division form-control" ></select>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.District)
                </div>
                <div class="editor-field">
                    <select id="nomineeVM.District" name="nomineeVM.District" data-val="@Model.nomineeVM.District"  data-url="/Config/DropDown/District/"  class = " district form-control" ></select>
                </div>
            </div>

            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.NID)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.NID, new { @placeholder = "NID No.", @class = "form-control" })
                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Mobile)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Mobile, new { @placeholder = "Mobile", @class = "required form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Phone)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Phone, new { @placeholder = "Phone", @class = " form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Fax)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Fax, new { @placeholder = "Fax", @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Passport)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.Passport, new { @placeholder = "Passport No.", @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="editor-label">
                    @Html.LabelFor(model => model.nomineeVM.Remarks)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.nomineeVM.Remarks, new { @placeholder = "Remarks", @rows = "1", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.nomineeVM.FileName)
                <input type="file" onchange="CheckImageSize(this);" name="NomineeF" id="NomineeF" style="width: 200px;" />
            </div>
            @if (Model.nomineeVM.FileName != null && Model.nomineeVM.FileName != "")
            {
                <div class="col-md-2">
                    <label>&nbsp;</label>
                    <div class="col-md-6">
                        <a target="_blank" href="~/Files/Nominee/@Model.nomineeVM.Id@Model.nomineeVM.FileName">
                            <img src="~/assets/Images/files.png" width="30px;" alt="File" title="File" /></a>
                    </div>
                    <div class="col-md-6" style="float: left;">
                        <span onclick="FileDelete(this)"; data-id="@Model.nomineeVM.Id" data-table="14"  data-field="FileName" data-url="~/Files/Nominee/@Model.nomineeVM.Id@Model.nomineeVM.FileName">
                            <img class="attachment" src="~/assets/Images/document_delete.png" width="25" alt="File" title="File" /></span>
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-sm-2">
                <div class="editor-label">
                    <label>Vaccine1 Complete</label>
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.nomineeVM.IsVaccineDose1Complete, new { @placeholder = "IsVaccineDose1Complete", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    <label>Vaccine1 Date</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose1Date, new { @placeholder = "Vaccine1 Date", @class = " customDatePicker form-control" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="editor-label">
                    <label>Vaccine1 Name</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose1Name, new { @placeholder = "Vaccine1 Name", @class = "form-control" })
                </div>
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.nomineeVM.VaccineFile1)
                <input type="file" onchange="CheckFileSize(this);" name="VaccineFile1" id="VaccineFile1" style="width: 200px;" />
            </div>
            @if (Model.nomineeVM.VaccineFile1 != null && Model.nomineeVM.VaccineFile1 != "")
            {
                <div class="col-md-2">
                    @Html.LabelFor(model => model.nomineeVM.VaccineFile1)
                    <div class="col-md-6">
                        <a target="_blank" href="~/Files/VaccineFile1/@Model.nomineeVM.Id@Model.nomineeVM.VaccineFile1">
                            <img class="attachment" src="~/assets/Images/files.png" width="30" alt="File" title="File" />
                        </a>
                    </div>
                    <div class="col-md-6" style="float: left;">
                        <span onclick="FileDelete(this)" ; data-id="@Model.nomineeVM.Id" data-table="14" data-field="VaccineFile1" data-url="~/Files/VaccineFile1/@Model.nomineeVM.Id@Model.nomineeVM.VaccineFile1">
                            <img class="attachment" src="~/assets/Images/document_delete.png" width="25px;" alt="File" title="File" />
                        </span>
                    </div>
                </div>
            }

        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    <label>Vaccine2 Complete</label>
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.nomineeVM.IsVaccineDose2Complete, new { @placeholder = "IsVaccineDose2Complete", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Vaccine2 Date</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose2Date, new { @placeholder = "Vaccine2 Date", @class = " customDatePicker form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    <label>Vaccine2 Name</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose2Name, new { @placeholder = "Vaccine2 Name", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.nomineeVM.VaccineFiles2)
                <input type="file" onchange="CheckFileSize(this);" name="VaccineFiles2" id="VaccineFiles2" style="width: 200px;" />
            </div>
            @if (Model.nomineeVM.VaccineFiles2 != null && Model.nomineeVM.VaccineFiles2 != "")
            {
                <div class="col-md-2">
                    @Html.LabelFor(model => model.nomineeVM.VaccineFiles2)
                    <div class="col-md-6">
                        <a target="_blank" href="~/Files/VaccineFiles2/@Model.nomineeVM.Id@Model.nomineeVM.VaccineFiles2">
                            <img class="attachment" src="~/assets/Images/files.png" width="30" alt="File" title="File" />
                        </a>
                    </div>
                    <div class="col-md-6" style="float: left;">
                        <span onclick="FileDelete(this)" ; data-id="@Model.nomineeVM.Id" data-table="1" data-field="VaccineFiles2" data-url="~/Files/VaccineFiles2/@Model.nomineeVM.Id@Model.nomineeVM.VaccineFiles2">
                            <img class="attachment" src="~/assets/Images/document_delete.png" width="25px;" alt="File" title="File" />
                        </span>
                    </div>
                </div>
            }

        </div>

        <div class="row">
            <div class="col-sm-3">
                <div class="editor-label">
                    <label>Vaccine3 Complete</label>
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.nomineeVM.IsVaccineDose3Complete, new { @placeholder = "IsVaccineDose3Complete", @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    <label>Vaccine3 Date</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose3Date, new { @placeholder = "Vaccine3 Date", @class = " customDatePicker form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="editor-label">
                    <label>Vaccine3 Name</label>

                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.nomineeVM.VaccineDose3Name, new { @placeholder = "Vaccine3 Name", @class = "form-control" })
                </div>
            </div>

        </div>
        <br />
        <p>
            @*(Model.IsActive && (identity.IsAdmin || identity.IsHRM))*@
            @if (identity.IsAdmin || identity.IsHRM || identity.IsESSEditPermission)
            {
                //<input type="button" value="Save" onclick="pageSubmit('frmNominee');" class="Save btn btn-info" />
                //  <input type="button" value="Edit" onclick="Editnominee();" class="Edit btn btn-info" />                    
                @*<button type="button" title="Click to Save" onclick="pageSubmit('frmNominee');" class="Save sym-btn-save">&nbsp;Save</button>*@
                
                <button type="button"  title="Save Data" id="saveJSOND" class="sym-btn-save">&nbsp;Save </button>
                
                <button type="button" title="Click for Edit" onclick="Editnominee();" class="Edit sym-btn-edit">&nbsp;Edit</button>
          
            }
            <button type="button" title="Click for Cancel" onclick="Canclenominee();" class="Cancle  sym-btn-cancel">&nbsp;Cancel</button>
            @*<input type="button" value="Cancel" onclick="Canclenominee();" class="Cancle btn btn-info" />*@
        </p>
    </div>
    <p>
        <input class="tooltip"></p>

}
<script>
    var url = "";
    var urlDivision = "";
    var urlDistrict = "";
    $(function () {
        customToollip();
        //$(document).tooltip();
        $("#dialogCon").hide();
        InitDateTimePickers();
        Editnominee();
        Country();
        Division();
        District();
        $(".showHideNM").hide();//index page new btn
        valiDation('frmNominee');
    });
    function DateOfBirth(sender) {
        var selectedDate = ParseDate($(sender).val());
        var today = new Date();
        if (selectedDate > today) {
            $(sender).val("");
            ShowResult("Fail", "Date of birth can't be prior to today!");
        }
    }
    var isChange = false;
    $('.form-control').change(function () {
        isChange = true;
    });

    //$('#saveJSON').click(function () {
    //    if (isChange == true) {
    //        if (pageSubmitJSON('frmNominee') == 0) {
    //            var myData = $('#frmNominee').serialize();
    //            var url = "/HRM/DependentNominee/Nominee";
    //            var res = submit(url, myData);
    //            if (res == true) {
    //                location.reload();
    //            }
    //            isChange = false;
    //        }
    //    }
    //    else {
    //        ShowResult("Success", "You have no changes for save");
    //    }
    //});

    $('#saveJSOND').click(function () {
        var url = "/HRM/DependentNominee/Nominee";

        $form = $('#frmNominee');

        $form.attr("action", url);
        $form.submit();

    });

    function Canclenominee() {
        if (isChange == true) {
            Ask("<h6>You have some changes in this form.</br>Click No for Ignore</h6>", null, function () {
                isChange = false;
                Canclenominee();
            })
        }
        else {
            //isChange = false;
            $("#myNominee").html('');
            $(".showHideNM").show();
        }
    }
</script>


