@model SymViewModel.HRM.EmployeeInfoVM 
@using UIHelper.MVC

@using SymOrdinary
@using System.Threading;
@{ 
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/Home/Index");
        return;
    }
}
@using (Html.BeginForm("PresentAddress", "ContactDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.presentAddress.Id)
    @Html.HiddenFor(model => model.presentAddress.EmployeeId)

    <div class="thinbox">
        <div class="th_thinbox">
         <p>Present Address</p>   
        </div>
        <div class="presentAddress">
            <div class="row">
                <div class="col-sm-12">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Address)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.presentAddress.Address, new { @placeholder = "Address",@rows="1", @class = "form-control" })
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Country)
                    </div>
                    <div class="editor-field">
                   <select id="presentAddress.Country" name="presentAddress.Country" data-val="@Model.presentAddress.Country"  data-url="/Config/DropDown/CountryEN/"  class = " country form-control" ></select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Division)
                    </div>
                    <div class="editor-field">
                   <select id="presentAddress.Division" name="presentAddress.Division" data-val="@Model.presentAddress.Division"  data-url="/Config/DropDown/Division/"  class = " division form-control" ></select>
                          </div>
                    </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.District)
                    </div>
                    <div class="editor-field">
                   <select id="presentAddress.District" name="presentAddress.District" data-val="@Model.presentAddress.District"  data-url="/Config/DropDown/District/"  class = " district form-control" ></select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.City)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddress.City, null, new { @placeholder = "City", @class = " form-control" })
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.PostalCode)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddress.PostalCode, null, new { @placeholder = "Postal Code", @class = " form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Phone)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddress.Phone, null, new { @placeholder = "Phone", @class = " form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Mobile)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddress.Mobile, null, new { @placeholder = "Mobile", @class = " form-control" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Fax)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.presentAddress.Fax, null, new { @placeholder = "Fax", @class = " form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.presentAddress.Remarks)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.presentAddress.Remarks , new { @placeholder = "Remarks",@rows="1", @class = " form-control" })
                    </div>
                </div>
            </div>
            <br />
            @if (identity.IsAdmin || identity.IsHRM)
{            <p class="actionButton_PresentA"></p>
            }


        </div>
    </div>
}
<script>
    $(function () {
        var html = "";
        if ('@Model.IsActive' == 'True') {
            html = '<button type="Submit" title="Save Data"   class="Save sym-btn-save" >&nbsp;Save</button><button type="button" title="Edit Data"   onclick="EditPresentAddress();" class="Edit sym-btn-edit" >&nbsp;Edit</button> &nbsp;<button title="Cancel Data"   type="button" onclick="Cancle();" class="Cancle sym-btn-cancel" >&nbsp;Cancel</button>'

            //html = '<input type="Submit" value="Save" class="Save btn btn-info" /><input type="button" value="Edit" onclick="EditPresentAddress();" class="Edit btn btn-info" />&nbsp;<input type="button" value="Cancel" onclick="Cancle();" class="Cancle btn btn-info" />';
        }
        else {
            html = '<button type="button" title="Cancel Data"   onclick="Cancle();" class="Cancle sym-btn-cancel" >&nbsp;Cancel</button>';

           // html = '<input type="button" value="Cancel" onclick="Cancle();" class="Cancle btn btn-info" />';
        }
        $(".actionButton_PresentA").append(html);
        

        EditPresentAddress();
    });
</script>
