@model SymViewModel.Leave.EmployeeLeaveStructureVM
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.EmployeeId)
    <div class="thinbox">
        <div class="row">
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.LeaveStructureId)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LeaveStructureId)
                    @Html.ValidationMessageFor(model => model.LeaveStructureId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.LeaveYear)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LeaveYear)
                    @Html.ValidationMessageFor(model => model.LeaveYear)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.LeaveType_E)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LeaveType_E)
                    @Html.ValidationMessageFor(model => model.LeaveType_E)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.LeaveDays)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LeaveDays)
                    @Html.ValidationMessageFor(model => model.LeaveDays)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsEarned)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.IsEarned)
                    @Html.ValidationMessageFor(model => model.IsEarned)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsCompensation)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.IsCompensation)
                    @Html.ValidationMessageFor(model => model.IsCompensation)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Remarks)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Remarks)
                    @Html.ValidationMessageFor(model => model.Remarks)
                </div>
            </div>
            <div class="col-md-3">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsActive)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>
        </div>
    </div>
    <p>
         <button type="submit" title="Save Data" class="sym-btn-save">&nbsp;Save</button>
@*        <input type="submit" value="Save" />*@
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
